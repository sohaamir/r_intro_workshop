---
title: "Basic data management and analysis using R"
subtitle: "Analysing and plotting behavioural choice data"
format: html
webr: 
  show-startup-message: true
  packages: ['ggplot2', 'tidyverse', 'tidyr', 'ggpubr', 'viridis', 'gridExtra']
  channel-type: "post-message"
filters:
  - webr
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  warning: false
  message: false
  eval: true
---

Now that you have a basic understanding how how `R` works, and what it is used for, let's put our newly learned skills to practical use.

When working with data in our studies, we can consider `R` to be the central software for data management, analysis and plotting.
It is quite robust for this purpose, in that it also reads in data of many different types and from many different sources [^1]:

[^1]: Kabacoff, R. I. (2022). R in action: data analysis and graphics with R and Tidyverse. Simon and Schuster. 

<div style="height: 5px;"></div>

![](/images/01.R_basics/data_management.png){fig-align="center" width="60%"}

## Working with behavioural data in R

In this section we will directly work with some experimental data from the HAVEN study.

The HAVEN study was a study investigating the relationship between cognition, neurovascular health and platelet function in older adults. 
For the purposes of this workshop, we will be using a subset of the data from the study, specifically focusing on the cognitive task data.

We will firstly plot the data using a variety of plots to understand how certain graphs are preferred for certain data. We will then perform basic statistical tests to understand whether the relationship between the variables are significant.

### Load and display the data

First thing first, we need to load and read the data. The first dataset is in the `participant_data.csv` file. This file format is called 'comma separated values' or CSV, which we can read into R using the `read_csv` function. We firstly assign the data to a variable called `data`, which we can now work directly with. You can see this on the right hand panel called `Data` in R -\>

```{webr-r}
#| context: interactive

url <- "https://raw.githubusercontent.com/sohaamir/placement_materials/refs/heads/main/data/participant_data.csv"
download.file(url, "participant_data.csv")
data <- read.csv("participant_data.csv")
```

Just to see if we have loaded in the correct file and correctly assigned it, we can display the first few rows of `data` using the `head` function:

```{webr-r}
#| context: interactive
head(data)
```

We can also calculate summary statistics for each variable using `summary`. The summary statistics will give us the mean, range etc for each.

```{webr-r}
#| context: interactive
summary(data)
```

## Data Visualization

We can also visualize the data using various plots. For example, if we wanted to understand whether people who are older have a higher lesion volume (possibly as a result of aging) we can create a scatter plot of age and total lesion volume, and add a line of best fit.

### Scatter plot of age and Total lesion volume

```{webr-r}
#| context: interactive

ggplot(data, aes(x = age, y = `lesion_volume`)) +
  geom_point(color = "darkblue") +
  geom_smooth(method = "lm", se = TRUE, color = "darkred", linetype = "solid") +
  labs(title = "Scatter plot of age and Total lesion volume",
       x = "age",
       y = "lesion_volume") +
  theme_minimal()
```

So, you can see a positive correlation, namely that (generally) the older you are, the higher the total lesion volume will be.

### Violin plot of Total lesion volume by sex

We can also group these results by sex, if for example we wanted to know whether there is a gender effect. We can do this using a boxplot, specficially a violin plot, a type of boxplot but which looks a bit nicer.

```{webr-r}
#| context: interactive

ggplot(data, aes(x = sex, y = `lesion_volume`)) +
  geom_violin(aes(fill = sex), scale = "area", trim = TRUE) +
  scale_fill_brewer(palette = "Dark2") +
  labs(title = "Violin plot of Total lesion volume by sex",
       x = "sex",
       y = "lesion_volume") +
  theme_minimal() +
  theme(legend.position = "none")
```

There seems to be a similar relationship between both genders, but more of a spread among Males, possibly due to the single outlier at the top. You can see this outlier in the scatter plot above as well.

### Height and weight by sex

If we wanted to understand whether there is a difference between the height and weight between Males and Females, we can do this using a scatter plot, grouped by Sex:

```{webr-r}
#| context: interactive

g <- ggplot(data, aes(x=height, y=weight, colour=sex))
g <- g + geom_point()
g
```

So you can see that males are generally towards the top and right (i.e., taller and heavier).

### Histogram of BMI

Histograms are useful if we want to understand the spread of a particular variable for different categories. For example, if we wanted to understand the distribution of bmi or age across the group.

Firstly, BMI:

```{webr-r}
#| context: interactive

ggplot(data, aes(x = bmi)) +
  geom_histogram(aes(y = after_stat(density)), binwidth = 1, fill = "steelblue", color = "black") +
  geom_density(color = "darkred", linetype = "solid", linewidth = 1) +
  labs(title = "Histogram of bmi with Density Curve",
       x = "bmi",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", hjust = 0.5),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
```

So you can see that the most common BMI is 25. You can see that the distribution of BMI is lower for both low and high bmi (under and overweight) and higher in the middle. This variable is said to be 'normally distributed'. More examples of normally distributed data include height and weight (which makes sense as they constitute BMI!).

Height:

```{webr-r}
#| context: interactive

ggplot(data, aes(x = height)) +
  geom_histogram(aes(y = after_stat(density)), binwidth = 0.01, fill = "steelblue", color = "black") +
  geom_density(color = "darkred", linetype = "solid", linewidth = 1) +
  labs(title = "Histogram of height with Density Curve",
       x = "height",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", hjust = 0.5),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
```

Weight:

```{webr-r}
#| context: interactive

ggplot(data, aes(x = weight)) +
  geom_histogram(aes(y = after_stat(density)), binwidth = 5, fill = "steelblue", color = "black") +
  geom_density(color = "darkred", linetype = "solid", linewidth = 1) +
  labs(title = "Histogram of weight with Density Curve",
       x = "weight",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", hjust = 0.5),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
```

### Histogram of age

Let's do the same but for age:

```{webr-r}
#| context: interactive

ggplot(data, aes(x = age)) +
  geom_histogram(aes(y = after_stat(density)), binwidth = 1, fill = "steelblue", color = "black") +
  geom_density(color = "darkred", linetype = "solid", linewidth = 1) +
  labs(title = "Histogram of age with Density Curve",
       x = "age",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(face = "bold", hjust = 0.5),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
```

Conversely to BMI, height and weight we see that age is not normally distributed, but this makes because we only recruited those over 50. If we were recruiting across all age ranges from the general population (i.e., not just from the university where most would be students between 18-25), then we probably would see a normal distribution.

## Basic statistics and significance testing

Ok, so we have been able to visualise the data, and we have an idea of some of the trends. But how can we test whether these results are significant? Can we statistically say that Men are taller than Women? What about the relationship between Lesion Volume and age? Can we say that the older you are the higher lesion volume you have?

Firstly, lets get some more summary statistics, this time for height and weight specficially:

```{webr-r}
#| context: interactive

group_by(data, sex) %>%
  summarise(
    count = n(),
    mean = mean(height, na.rm = TRUE),
    sd = sd(height, na.rm = TRUE)
  )

group_by(data, sex) %>%
  summarise(
    count = n(),
    mean = mean(weight, na.rm = TRUE),
    sd = sd(weight, na.rm = TRUE)
  )
```

You can see that the mean height for women is 1.64 and men is 1.80 (meters), whilst the mean weight is 65.9 and 85.5 kg respectively.

### T-test for difference between the mean of two groups

But is this difference significant? To find out the statistical difference between two groups we can simply run a significance test (in this case a t-test).

```{webr-r}
#| context: interactive

women<-data[which(data$sex=="F"),] 
men<-data[which(data$sex=="M"),] 

t.test(women$height, men$height)
t.test(women$weight, men$weight)
```

So, we can see in the p-values that there is a statistically significant difference between the height and weight between males and females. (9.77e-10 is a 0 followed by 10 more zeroes so 0.000000000977).

In the case that we want to see whether there is a significant relationship between two continuous variables, i.e., between age and Lesion Volume across the entire group, we can run a correlation. A correlation just checks whether or not as one measure increases, the other also increases and vice versa. For example, we can run a correlation between lesion volume and age to see if as lesion volume increases age also increases:

### Correlation between Lesion Volume and age:

```{webr-r}
#| context: interactive

# Calculate linear regression
regression <- lm(`lesion_volume` ~ age, data = data)
r_value <- cor(data$age, data$`lesion_volume`)
p_value <- summary(regression)$coefficients[2, "Pr(>|t|)"]

# Create plot
ggplot(data, aes(x = age, y = `lesion_volume`)) +
  geom_point(color = "darkblue") +
  geom_smooth(method = "lm", se = TRUE, color = "darkred", linetype = "solid") +
  labs(title = "Scatter plot of age and Total lesion volume",
       x = "age",
       y = "lesion_volume") +
  theme_minimal() +
  annotate("text", x = min(data$age), y = max(data$`lesion_volume`),
           label = paste("R = ", round(r_value, 2), "\np-value = ", format.pval(p_value, digits = 2), sep = ""),
           hjust = 0, vjust = 1)
```

So, whilst there is a significant relationship between age and Lesion Volume, we can see one or two outliers in our data. What would the data look like if we removed them?

```{webr-r}
#| context: interactive

# Remove 21st and 30th rows
data_removed <- data[-c(21, 30),]

# Perform linear regression
model <- lm(`lesion_volume` ~ age, data = data_removed)
p_value <- summary(model)$coefficients[2, "Pr(>|t|)"]

# Create a scatter plot
ggplot(data_removed, aes(x = age, y = `lesion_volume`)) +
  geom_point(color = "darkblue") +
  geom_smooth(method = "lm", se = TRUE, color = "darkred", linetype = "solid") +
  labs(title = "Scatter plot of age and Total lesion volume",
       x = "age",
       y = "lesion_volume") +
  scale_y_continuous(limits = c(0, 5)) +
  theme_minimal() +
  annotate("text", x = min(data_removed$age), y = 5,
           label = paste("p-value = ", format.pval(p_value, digits = 2), sep = ""),
           hjust = 0, vjust = 1)
```

So, the relationship is still significant, but less so than before.

### Plotting correlations for Males and Females separately

Finally, we may also want to see if there is a difference between Males and Females with Lesion Volume and age. For example, maybe women or men are protected against lesions as they age, whilst they other are not. In this case we would expect to see a significant relationship for one group but not the other. Let's run a correlation for males and females with lesion volume separately, and plot them on the same graph:

```{webr-r}
#| context: interactive

# Perform linear regression for each sex
model_male <- lm(`lesion_volume` ~ age, data = data_removed[data_removed$sex == "M",])
model_female <- lm(`lesion_volume` ~ age, data = data_removed[data_removed$sex == "F",])

# Extract p-values
p_value_male <- summary(model_male)$coefficients[2, "Pr(>|t|)"]
p_value_female <- summary(model_female)$coefficients[2, "Pr(>|t|)"]

# Create a scatter plot separating Males and Females
ggplot(data_removed, aes(x = age, y = `lesion_volume`, color = sex)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, linetype = "solid") +
  labs(title = "Scatter plot of age and Total lesion volume by sex",
       x = "age",
       y = "lesion_volume") +
  scale_y_continuous(limits = c(0, 5)) +
  theme_minimal() +
  annotate("text", x = min(data_removed$age), y = 5,
           label = paste("Males: p-value = ", format.pval(p_value_male, digits = 2), "\nFemales: p-value = ", format.pval(p_value_female, digits = 2), sep = ""),
           hjust = 0, vjust = 1)
```

We can now see that there is only a significant difference in the relationship between age and total lesion volume for females, and not for males. Why do you think that this is? Regardless, by looking at the data in this way we have found something interesting (which we didn't see before) that we can subsequently look at further.

## Reaction times and accuracy

Finally, we may also be interested with understanding the potential impact of demographic and brain factors upon behaviour. To do this we can look at participants' reaction times and accuracy during the episodic memory task using the `rt_data` dataset.

```{webr-r}
#| context: interactive

url <- "https://raw.githubusercontent.com/sohaamir/placement_materials/refs/heads/main/data/rt_data.csv"
download.file(url, "rt_data.csv")
rt_data <- read.csv("rt_data.csv")
```

Again, let's run `head` to see the data:

```{webr-r}
#| context: interactive

head(rt_data)
```

And `summary`:

```{webr-r}
#| context: interactive

summary(rt_data)
```

At a first glance, there are some clear questions that we can investigate:

-   Does age affect reaction time/accuracy?
-   Does sex affect reaction time/accuracy?
-   Is there a sex by age effect?
-   Does lesion volume/number affect reaction time/accuracy?

### Age and reaction time/accuracy

Firstly, lets plot the relationship between age and performance on the task, both for the reaction time (only for ones they got correct) and the percentage accuracy:

```{webr-r}
#| context: interactive

# Create a theme for scientific publication
theme_publication <- theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )

# Plot Age against correct_rt
rt_model <- lm(correct_rt ~ Age, data = rt_data)
rt_p_value <- summary(rt_model)$coefficients[2, "Pr(>|t|)"]

rt_plot <- ggplot(rt_data, aes(x = Age, y = correct_rt)) +
  geom_point(color = "darkblue") +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  labs(title = "Reaction Time vs. Age",
       x = "Age",
       y = "Mean Correct Reaction Time (ms)") +
  theme_publication +
  annotate("text", x = min(rt_data$Age), y = max(rt_data$correct_rt),
           label = paste("p-value =", format.pval(rt_p_value, digits = 3)),
           hjust = 0, vjust = 1, size = 4)

# Plot Age against correct_percent
percent_model <- lm(correct_percent ~ Age, data = rt_data)
percent_p_value <- summary(percent_model)$coefficients[2, "Pr(>|t|)"]

percent_plot <- ggplot(rt_data, aes(x = Age, y = correct_percent)) +
  geom_point(color = "darkblue") +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  labs(title = "Correct Percentage vs. Age",
       x = "Age",
       y = "Correct Percentage (%)") +
  theme_publication +
  annotate("text", x = min(rt_data$Age), y = max(rt_data$correct_percent),
           label = paste("p-value =", format.pval(percent_p_value, digits = 3)),
           hjust = 0, vjust = 1, size = 4)

# Display the plots
print(rt_plot)
print(percent_plot)
```

So we can see that older participants took longer (on correct trials), and made more mistakes. Both of these are significant.

Let's now finally look at each of these but separated by gender:

```{webr-r}
#| context: interactive

# Create a theme for scientific publication
theme_publication <- theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_blank(),
    legend.text = element_text(size = 10),
    legend.position = "bottom"
  )

# Plot Age against correct_rt separated by Sex
rt_model_m <- lm(correct_rt ~ Age, data = rt_data[rt_data$Sex == "M", ])
rt_model_f <- lm(correct_rt ~ Age, data = rt_data[rt_data$Sex == "F", ])
rt_p_value_m <- summary(rt_model_m)$coefficients[2, "Pr(>|t|)"]
rt_p_value_f <- summary(rt_model_f)$coefficients[2, "Pr(>|t|)"]

rt_plot <- ggplot(rt_data, aes(x = Age, y = correct_rt, color = Sex)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, linetype = "solid") +
  labs(title = "Reaction Time vs. Age by Sex",
       x = "Age",
       y = "Correct Reaction Time (ms)") +
  scale_color_manual(values = c("darkblue", "darkred"),
                     labels = c("Female", "Male")) +
  theme_publication +
  annotate("text", x = min(rt_data$Age), y = max(rt_data$correct_rt),
           label = paste("Males: p-value =", format.pval(rt_p_value_m, digits = 3),
                         "\nFemales: p-value =", format.pval(rt_p_value_f, digits = 3)),
           hjust = 0, vjust = 1, size = 4) +
  guides(color = guide_legend(title = "Sex"))

# Plot Age against correct_percent separated by Sex
percent_model_m <- lm(correct_percent ~ Age, data = rt_data[rt_data$Sex == "M", ])
percent_model_f <- lm(correct_percent ~ Age, data = rt_data[rt_data$Sex == "F", ])
percent_p_value_m <- summary(percent_model_m)$coefficients[2, "Pr(>|t|)"]
percent_p_value_f <- summary(percent_model_f)$coefficients[2, "Pr(>|t|)"]

percent_plot <- ggplot(rt_data, aes(x = Age, y = correct_percent, color = Sex)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, linetype = "solid") +
  labs(title = "Correct Percentage vs. Age by Sex",
       x = "Age",
       y = "Correct Percentage (%)") +
  scale_color_manual(values = c("darkblue", "darkred"),
                     labels = c("Female", "Male")) +
  theme_publication +
  annotate("text", x = min(rt_data$Age), y = min(rt_data$correct_percent),
           label = paste("Males: p-value =", format.pval(percent_p_value_m, digits = 3),
                         "\nFemales: p-value =", format.pval(percent_p_value_f, digits = 3)),
           hjust = 0, vjust = 0, size = 4) +
  guides(color = guide_legend(title = "Sex"))

# Display the plots
print(rt_plot)
print(percent_plot)
```

So here we can see that there is a significant relationship between female age and reaction time (but not for males), but neither sex with correct percentage, although there are trends (i.e., the p-value is close to 0.05).

Finally, we would like to see if there is an effect of lesions on the reaction time or percent accuracy. We can firstly plot this for the entire group:

```{webr-r}
#| context: interactive

# Create a theme for scientific publication
theme_publication <- theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )

# Plot lesion_number against correct_percent
model_ln_cp <- lm(correct_percent ~ lesion_number, data = rt_data)
p_value_ln_cp <- summary(model_ln_cp)$coefficients[2, "Pr(>|t|)"]

plot_ln_cp <- ggplot(rt_data, aes(x = lesion_number, y = correct_percent)) +
  geom_point(color = "darkblue", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkblue", linetype = "solid") +
  labs(title = "Lesion Number vs. Correct Percentage",
       x = "Lesion Number",
       y = "Correct Percentage (%)") +
  annotate("text", x = max(rt_data$lesion_number), y = max(rt_data$correct_percent),
           label = paste("p-value =", format.pval(p_value_ln_cp, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_number against correct_rt
model_ln_rt <- lm(correct_rt ~ lesion_number, data = rt_data)
p_value_ln_rt <- summary(model_ln_rt)$coefficients[2, "Pr(>|t|)"]

plot_ln_rt <- ggplot(rt_data, aes(x = lesion_number, y = correct_rt)) +
  geom_point(color = "darkred", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  labs(title = "Lesion Number vs. Correct Reaction Time",
       x = "Lesion Number",
       y = "Correct Reaction Time (ms)") +
  annotate("text", x = max(rt_data$lesion_number), y = max(rt_data$correct_rt),
           label = paste("p-value =", format.pval(p_value_ln_rt, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_volume against correct_percent
model_lv_cp <- lm(correct_percent ~ lesion_volume, data = rt_data)
p_value_lv_cp <- summary(model_lv_cp)$coefficients[2, "Pr(>|t|)"]
plot_lv_cp <- ggplot(rt_data, aes(x = lesion_volume, y = correct_percent)) +
  geom_point(color = "darkblue", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkblue", linetype = "solid") +
  geom_vline(xintercept = 3, color = "red", linetype = "dashed") +  # Add this line
  labs(title = "Lesion Volume vs. Correct Percentage",
       x = "Lesion Volume",
       y = "Correct Percentage (%)") +
  annotate("text", x = max(rt_data$lesion_volume), y = max(rt_data$correct_percent),
           label = paste("p-value =", format.pval(p_value_lv_cp, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_volume against correct_rt
model_lv_rt <- lm(correct_rt ~ lesion_volume, data = rt_data)
p_value_lv_rt <- summary(model_lv_rt)$coefficients[2, "Pr(>|t|)"]
plot_lv_rt <- ggplot(rt_data, aes(x = lesion_volume, y = correct_rt)) +
  geom_point(color = "darkred", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  geom_vline(xintercept = 3, color = "red", linetype = "dashed") +  # Add this line
  labs(title = "Lesion Volume vs. Correct Reaction Time",
       x = "Lesion Volume",
       y = "Correct Reaction Time (ms)") +
  annotate("text", x = max(rt_data$lesion_volume), y = max(rt_data$correct_rt),
           label = paste("p-value =", format.pval(p_value_lv_rt, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Display the plots
print(plot_ln_cp)
print(plot_ln_rt)
print(plot_lv_cp)
print(plot_lv_rt)
```

But you can see that there are outliers for the last two graphs, indicated by those beyond the red line. What would happen if we removed these from the plots?

```{webr-r}
#| context: interactive

# Create a theme for scientific publication
theme_publication <- theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )

# Subset the data to exclude lesion_volume greater than 3
rt_data_subset <- subset(rt_data, lesion_volume <= 3)

# Plot lesion_number against correct_percent
model_ln_cp <- lm(correct_percent ~ lesion_number, data = rt_data_subset)
p_value_ln_cp <- summary(model_ln_cp)$coefficients[2, "Pr(>|t|)"]

plot_ln_cp <- ggplot(rt_data_subset, aes(x = lesion_number, y = correct_percent)) +
  geom_point(color = "darkblue", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkblue", linetype = "solid") +
  labs(title = "Lesion Number vs. Correct Percentage",
       x = "Lesion Number",
       y = "Correct Percentage (%)") +
  annotate("text", x = max(rt_data_subset$lesion_number), y = max(rt_data_subset$correct_percent),
           label = paste("p-value =", format.pval(p_value_ln_cp, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_number against correct_rt
model_ln_rt <- lm(correct_rt ~ lesion_number, data = rt_data_subset)
p_value_ln_rt <- summary(model_ln_rt)$coefficients[2, "Pr(>|t|)"]

plot_ln_rt <- ggplot(rt_data_subset, aes(x = lesion_number, y = correct_rt)) +
  geom_point(color = "darkred", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  labs(title = "Lesion Number vs. Correct Reaction Time",
       x = "Lesion Number",
       y = "Correct Reaction Time (ms)") +
  annotate("text", x = max(rt_data_subset$lesion_number), y = max(rt_data_subset$correct_rt),
           label = paste("p-value =", format.pval(p_value_ln_rt, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_volume against correct_percent
model_lv_cp <- lm(correct_percent ~ lesion_volume, data = rt_data_subset)
p_value_lv_cp <- summary(model_lv_cp)$coefficients[2, "Pr(>|t|)"]

plot_lv_cp <- ggplot(rt_data_subset, aes(x = lesion_volume, y = correct_percent)) +
  geom_point(color = "darkblue", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkblue", linetype = "solid") +
  labs(title = "Lesion Volume vs. Correct Percentage",
       x = "Lesion Volume",
       y = "Correct Percentage (%)") +
  annotate("text", x = max(rt_data_subset$lesion_volume), y = max(rt_data_subset$correct_percent),
           label = paste("p-value =", format.pval(p_value_lv_cp, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Plot lesion_volume against correct_rt
model_lv_rt <- lm(correct_rt ~ lesion_volume, data = rt_data_subset)
p_value_lv_rt <- summary(model_lv_rt)$coefficients[2, "Pr(>|t|)"]

plot_lv_rt <- ggplot(rt_data_subset, aes(x = lesion_volume, y = correct_rt)) +
  geom_point(color = "darkred", alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "darkred", linetype = "solid") +
  labs(title = "Lesion Volume vs. Correct Reaction Time",
       x = "Lesion Volume",
       y = "Correct Reaction Time (ms)") +
  annotate("text", x = max(rt_data_subset$lesion_volume), y = max(rt_data_subset$correct_rt),
           label = paste("p-value =", format.pval(p_value_lv_rt, digits = 3)),
           hjust = 1, vjust = 1, size = 4) +
  theme_publication

# Display the plots
print(plot_ln_cp)
print(plot_ln_rt)
print(plot_lv_cp)
print(plot_lv_rt)
```

So you can see a difference (particularly in the last graph) although none of the relationships become significant by removing the outliers.

## Linear regression 




